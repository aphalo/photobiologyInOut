%\VignetteEngine{knitr}
%\VignetteIndexEntry{User guide}
%\VignetteDepends{knitr, photobiology, photobiologyWavebands, photobiologygg, photobiologyInOut, ggplot2, lubridate}
%\VignetteKeyword{misc}

\documentclass{article}

\usepackage[utf8]{inputenc}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=2,
 breaklinks=false,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\usepackage{listings}
\usepackage{booktabs}
\usepackage{bbding}
\usepackage{xspace}
\usepackage{framed}

\newcommand{\PB}{\textsf{photobiology}\xspace}
\newcommand{\PBPL}{\textsf{photobiologyPlants}\xspace}
\newcommand{\PBFLT}{\textsf{photobiologyFilters}\xspace}
\newcommand{\PBSU}{\textsf{photobiologySun}\xspace}
\newcommand{\PBLA}{\textsf{photobiologyLamps}\xspace}
\newcommand{\PBLD}{\textsf{photobiologyLEDs}\xspace}
\newcommand{\PBSN}{\textsf{photobiologySensors}\xspace}
\newcommand{\PBWB}{\textsf{photobiologyWavebands}\xspace}
\newcommand{\PBIO}{\textsf{photobiologyInOut}\xspace}

\newcommand{\Unit}[1]{\ensuremath{\mathrm{#1}}\xspace}

\newcommand{\watt}{\Unit{W\,m^{-2}}}
\newcommand{\wattnm}{\Unit{W\,m^{-2}\,nm^{-1}}}
\newcommand{\mwattnm}{\Unit{mW\,m^{-2}\,nm^{-1}}}
\newcommand{\mol}{\Unit{mol\,m^{-2}\,s^{-1}}}
\newcommand{\molnm}{\Unit{mol\,m^{-2}\,s^{-1}\,nm^{-1}}}

\begin{document}

<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
opts_chunk$set(fig.path='figure/pos-', fig.align='center', fig.show='hold',
               fig.width=7, fig.height=6, size="footnotesize")
options(replace.assign=TRUE,width=60)
@

<<example-0-hiden, eval=TRUE, include=FALSE>>=
library(photobiology)
library(photobiologyWavebands)
library(photobiologygg)
library(photobiologyInOut)
library(lubridate)
library(ggplot2)
@

<<own-set-up, echo=FALSE, include=FALSE>>=
my_version <- packageVersion("photobiologyInOut")
@

\title{\PBIO Version \Sexpr{my_version}\\ User Guide}
\author{Pedro J. Aphalo}

\maketitle

\tableofcontents

\section{Introduction}

<<example-0-hiden, eval=FALSE, include=TRUE>>=
@

<<>>=
options(dplyr.print_max = 5)
options(dplyr.print_min = 3)
@

This package defines functions for importing spectral data from
different instruments (Table \ref{tab:funs:inst}) and simulation
models (Table \ref{tab:funs:simul}).

\begin{table}[h]
\centering
\begin{tabular}{lll}
\toprule
R function & Instrument & Program \\
\midrule
read\_ooss\_file() & Ocean Optics spectrometers & SpectraSuite \\
read\_oojaz\_file() & Ocean Optics Jaz          & \emph{instrument} \\
read\_macam\_file() & Macam                     & \emph{instrument} \\
read\_licor\_file() & LI-COR LI-1800            & PC1800 (MS-DOS) \\
\bottomrule
\end{tabular}
\caption{Functions for importing measured spectral emission data}\label{tab:funs:inst}
\end{table}

\begin{table}[h]
\centering
\begin{tabular}{lll}
\toprule
R function & Simulation model & version \\
\midrule
read\_tuv\_file() & TUV (Sasha Madronich) & version 5.0 (modified)  \\
read\_tuv\_file() & TUV (Sasha Madronich) & edited output  \\
\bottomrule
\end{tabular}
\caption{Functions for importing simualted spectral data from models}\label{tab:funs:simul}
\end{table}

\section{Examples}

Reading a file geenrated by Ocean Optics' Jaz spectrometer.

<<>>=
jaz.spct <- read_oojaz_file(file = "spectrum.JazIrrad")
@

Photon and energy irradiances.

<<>>=
q_irrad(jaz.spct, PAR()) * 1e6 # umol m-2 s-1
e_irrad(jaz.spct, PAR())       # W m-2
@

Plotting the spectrum.

<<>>=
plot(jaz.spct)
@

All in one statement.

<<>>=
plot(read_oojaz_file(file = "spectrum.JazIrrad"))
@

As above but limiting the wavelength range plotted.

<<>>=
plot(read_oojaz_file(file = "spectrum.JazIrrad"), range = c(250,850))
@

Adding our custom ``adaptive'' smoothing.

<<>>=
plot(smooth_spct(read_oojaz_file(file = "spectrum.JazIrrad")), range = c(315,900))
@

Now a file from an Ocean Optics' Q6500? spectrometer.

<<>>=
plot(read_ooss_file(file = "spectrum.SSIrrad"))
@

Macam's single column DTA files can also be imported.

<<>>=
plot(read_macam_file(file = "spectrum.DTA"))
@

And a file generated by LI-COR's PC1800 program for the LI-1800 sepctroradiometer.

<<>>=
licor.spct <- read_licor_prn(file = "spectrum.PRN")
@

In all cases as much information as possible is decoed, and the data file headers
are preserved as comments in the source.spct objects.

<<>>=
licor.spct
cat(comment(licor.spct))
plot(licor.spct, unit.out = "photon")
@

A variable with the user supplied date and time data, or the date read from
the header (the text itself) not the file date as the file date may noy reflect
the creation date and time.

<<>>=
jaz.spct <- read_oojaz_file(file = "spectrum.JazIrrad", date = NULL)
jaz.spct
@


The output from the TUV model can be imported either by editing it before
import, or by making a simple edit to the output routine of TUV. This function
is known to work with TUV version 5.0 output. The output from TUV can contain
a variable number of spectra in ``parallel'' columns, which are \emph{melted}
into a single column, with a factor with letter as levels, a numeric variable
with the zenith angle and a POSIXct column with times. A date needs to be
always supplied as the output file from TUV has only time of day information. 

<<>>=
tuv.spct <- read_tuv_file(file = "usrout.txt", date = ymd("2014-03-21"))
summary(subset(tuv.spct, spct.idx == "A"))
tuv.spct
@

It is possible to extract individual spectra with subset, or as done here
plot them in different panels.

<<fig.height=10>>=
plot(tuv.spct, annotations = c("colour.guide")) +
  facet_wrap(~date, ncol = 2)
@

The output is a single \texttt{source\_spct} object that can be easily converted 
into a \texttt{source\_mspct} object containing the individual spectra as
members of the collection.

<<>>=
tuv.mspct <- subset2mspct(tuv.spct)
tuv.mspct
@

With the default of \texttt{lubridate::today()} for date times are `mapped' to
the current local date using the time zone of the computer as visible to R.

<<>>=
tuv_nd.spct <- read_tuv_file(file = "usrout.txt")
tuv_nd.spct
@

\end{document}