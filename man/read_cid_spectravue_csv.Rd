% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read-cid-spectravue-csv.r
\name{read_cid_spectravue_csv}
\alias{read_cid_spectravue_csv}
\title{Read File Saved by CID's SpectraVue.}
\usage{
read_cid_spectravue_csv(
  file,
  date = NULL,
  geocode = NULL,
  label = NULL,
  tz = NULL,
  locale = readr::default_locale(),
  range = c(380, 1000),
  simplify = TRUE,
  absorbance.to = "object",
  ...
)
}
\arguments{
\item{file}{character}

\item{date}{a \code{POSIXct} object to use to set the \code{"when.measured"}
attribute. If \code{NULL}, the default, the date and time are extracted
from the file.}

\item{geocode}{A data frame with columns \code{lon} and \code{lat} used to
set attribute \code{"where.measured"}. If \code{NULL}, the default, the
geocode is extracted from the file, if present, and if \code{NA} the
"where.measured" attribute is not set.}

\item{label}{character string. If \code{NULL}, the default, the value of the
"tag" present in the file is used, and if \code{NA} the "what.measured"
attribute is not set.}

\item{tz}{character Time zone is by default that of the machine's locale.}

\item{locale}{The locale controls defaults that vary from place to place. The
default locale is US-centric (like R), but you can use
\code{\link[readr]{locale}} to create your own locale that controls things
like the default time zone, encoding, decimal mark, big mark, and day/month
names.}

\item{range}{numeric A vector of length two, or any other object for which
function range() will return range of wavelengths expressed in nanometres.}

\item{simplify}{logical If TRUE, single spectra are returned as individual
spectra instead of collections of length one.}

\item{absorbance.to}{character Affects only absorbance measurements:
\code{"object"}, \code{"all"} or \code{"A"}.}

\item{...}{additional arguments passed to the constructor of the
`filter_spct` object.}
}
\value{
An object of class \code{filter_spct}, \code{relector_spct},
  \code{object_spct} or \code{generic_mspct}.
}
\description{
Read wavelength and spectral data from Measurements.CSV files exported from
CID Bio-Sciences' SpectraVue CI-710s leaf spectrometer, importing them into
R. Available metadata is also extracted from the file.
}
\details{
\code{read_cid_spectravue_csv()} only accepts "row oriented" CSV files. These
may contain multiple spectra, one per row.

SpectrVue's row-wise spectral \code{Measurements.CSV} files contain
  columns with metadata on the right edge, followed by columns with data for
  each of the 2048 pixels or wavelengths. The value in column "Mode"
  indicates the quantity measured, decoded into \code{Tpc}, \code{Rpc} or
  \code{A}. The data in each row in the CSV file are read and stored in a
  \code{filter_spct} object. These objects are collected into a single
  \code{filter_mspct} object and returned.
}
\note{
SpectraVue creates four \code{.CSV} files for each measurement, from
  these, this function reads the one with name ending in
  \code{Measurements.CSV}. The first part of the file name gives the time of
  the session, but as the files can contain multiple spectra measured at
  different times, the time metadata is extracted separately for each
  spectrum. We provide a default argument for \code{range} that discards data
  for short and long wavelengths because values outside this range are
  according to the instrument's manual outside the usable range and in
  practice extremely noisy.
}
\section{Internal _vs._ total transmittance and absorbance}{
 Spectravue
  returns _total_ transmittance values labelled with `Transmittance` as
  `Mode`. Absorbance (`Abs`) values returned labelled with `Absorbance` as
  `Mode` are for _internal(??)_ absorbance. It is thus best to save spectral
  data acquired as absorbance into objects of class `object_spct`, the
  default, as this preserves all the acquired data. Preserving them allows
  computation of both internal and total absorption values expressed as
  absorbance, absorptance or transmittance at any later time. As data
  acquisition is very fast there is little reason not to use routinely the
  "Absorbance" setting in the spectrometer.
}

\section{Specular _vs._ total reflectance}{
 This function assumes that
  SpectraVue returns _total_ reflectance readings. Given the opticss of the
  instrument this is likely only an approximation.
}

\examples{

# read file containing a single reflectaance spectrum

 file.name <-
   system.file("extdata", "cid-spectravue-Rpc-Measurements.csv",
               package = "photobiologyInOut", mustWork = TRUE)

 cid_filter.spct <-
   read_cid_spectravue_csv(file = file.name)
 summary(cid_filter.spct)

 cid_filter.mspct <-
   read_cid_spectravue_csv(file = file.name, simplify = FALSE)
 summary(cid_filter.mspct)

 # read file containing two "mixed" spectra

 file.name <-
   system.file("extdata", "cid-spectravue-multi-Measurements.csv",
               package = "photobiologyInOut", mustWork = TRUE)

 cid.generic_mspct <-
   read_cid_spectravue_csv(file = file.name)
 summary(cid.generic_mspct)

 # read data measured as absorbance (A, Rpc and Tpc)

 file.name <-
   system.file("extdata", "cid-spectravue-Abs-Measurements.csv",
               package = "photobiologyInOut", mustWork = TRUE)
 cid.object_spct <-
   read_cid_spectravue_csv(file = file.name)
 summary(cid.object_spct)

 cid.object_mspct <-
   read_cid_spectravue_csv(file = file.name, simplify = FALSE)
 summary(cid.object_mspct)

 cid_all.generic_mspct <-
   read_cid_spectravue_csv(file = file.name, absorbance.to = "all")
 summary(cid_all.generic_mspct)

 cid_A.filter_spct <-
   read_cid_spectravue_csv(file = file.name, absorbance.to = "A")
 summary(cid_A.filter_spct)

}
\references{
\url{https://cid-inc.com/}
}
